name: Build ARM64 Image
on:
  push:
    branches:
      - master
  release:
    types: [created]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get commit SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build and export
        id: build
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v2
        with:
          platforms: linux/arm64/v8
          context: scripts/
          tags: regshy/subconverter:latest-arm64
          build-args: |
            SHA=${{ steps.vars.outputs.sha_short }}
            THREADS=2
          outputs: type=image,push=true

      - name: Replace tag without `v`
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/github-script@v4
        id: version
        with:
          script: |
            return context.payload.ref.replace(/\/?refs\/tags\/v/, '')
          result-encoding: string

      - name: Build release and export
        id: build_rel
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v2
        with:
          platforms: linux/arm64/v8
          context: scripts/
          tags: Shisly/subconverter:${{steps.version.outputs.result}}-arm64
          build-args: |
            THREADS=2
          outputs: type=image,push=true

      - name: Save digest
        if: github.ref == 'refs/heads/master'
        run: echo ${{ steps.build.outputs.digest }} > /tmp/digest.txt

      - name: Save release digest
        if: startsWith(github.ref, 'refs/tags/')
        run: echo ${{ steps.build_rel.outputs.digest }} > /tmp/digest.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: digest_arm64
          path: /tmp/digest.txt
